I"<p>본 포스팅은 “혼자 공부하는 머신러닝+딥러닝” 책 내용을 기반으로 작성되었습니다.
잘못된 내용이 있을 경우 지적해 주시면 감사드리겠습니다.</p>

<h2 id="4-1-합성곱">4-1. 합성곱</h2>
<p><strong>합성곱(Convolution)</strong>은 마치 입력 데이터에 마법의 도장을 찍어서 유용한 특성만 드러나게 하는 것이다. 인공 신경망은 처음에 가중치 $w_{1}$ ~ $w_{10}$ 과 절편 $b$를 랜덤하게 초기화한 다음 에포크를 반복하면서 경사 하강법 알고리즘을 사용하여 손실이 낮아지도록 최적의 가중치와 절편을 찾아간다. 합성곱은 이와 조금 다르게 입력 데이터 전체에 가중치를 적용하는 것이 아닌 일부에 가중치를 곱한다. 첫 번째 합성곱에 사용된 가중치 $w_{1}$ ~ $w_{3}$ 과 절편 $b$가 두 번째 합성곱에도 동일하게 사용된다. 이렇게 한 칸씩 아래로 이동하면서 출력을 만드는 것이 바로 합성곱이다. 합성곱 층의 뉴런에 있는 가중치 개수는 정하기 나름이다. 이 가중치는 마치 입력 데이터 위를 이동하면서 같은 도장으로 하나씩 찍는 것처럼 생각할 수 있다. 입력 위를 이동하면서 출력을 만드는 뉴런을 <strong>합성곱 신경망(Convolutional neural network)</strong>에서는 <strong>필터(Filter)</strong> 혹은 <strong>커널(Kernel)</strong> 라고 부른다.<br /></p>

<p>합성곱의 장점은 2차원 입력에도 적용할 수 있다는 것이다. 필터의 커널 크기를 (3, 3)으로 가정하고 입력의 9개 원소와 커널의 9개 가중치를 곱한 후 절편을 더하여 1개의 출력을 만든다. 그 다음 필터가 오른쪽 한 칸 이동하여 합성곱을 또 수행한다. 입력의 너비 만큼 이동이 끝났으면 그 다음 아래로 한 칸 이동하여 다시 왼쪽에서부터 합성곱을 수행한다. 이처럼 입력과 가중치의 행과 열을 맞추어 곱헴하고 더하는게 전부이다. 합성곱 계산을 통해 얻은 출력은 <strong>특성 뱁(Feature map)</strong>라고 부른다.</p>

<p>밀집층에서 여러개의 뉴런을 사용했다. 합성곱 층에서도 여러 개의 필터를 사용한다. 만약 (2, 2) 특성맵이 출력된다 할 때, 3개의 필터를 사용한다면 (2, 2, 3) 크기의 3차원 배열이 출력된다. 이 때 합성곱 층에 있는 필터의 가중치(커널)는 모두 다르다. 정리하자면, 합성곱의 실제 계산은 밀집층과 동일하게 단순히 입력과 가중치를 곱하는 것이지만 2차원 형태를 유지하는 점이 다르다. 또한 입력보다 훨씬 작은 크기의 커널을 사용하고 입력 위를 이동하면서 2차원 특성 맵을 만든다. 이렇게 2차원 구조를 그대로 이용하므로 이미지 처리 분야에서 뛰어난 성능을 발휘한다.</p>

<h2 id="4-2-케라스-합성곱-층">4-2. 케라스 합성곱 층</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">tensorflow</span> <span class="kn">import</span> <span class="n">keras</span>
<span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Conv2D</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="n">kernel_size</span><span class="o">=</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">)</span>
</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">Conv2D</code> 클래스의 첫 번째 매개변수는 필터의 개수이다. <code class="language-plaintext highlighter-rouge">kernel_size</code> 매개변수는 필터에 사용할 커널의 크기를 지정한다. 이 두 매개변수는 반드시 지정해야 하는 매개변수이다. 마지막으로 활성화 함수를 지정한다. 참고로 일반적인 특성 맵은 활성화 함수를 통과한 값을 의미한다. 커널의 크기는 하이퍼파라미터이므로 여러 가지 값을 시도해봐야 한다. 보통 (3, 3)이나 (5, 5)가 많이 쓰인다.</p>
:ET