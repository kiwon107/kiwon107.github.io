I"_t<p>본 포스팅은 “자료구조와 함께 배우는 알고리즘(파이썬)” 책 내용을 기반으로 작성되었습니다.
잘못된 내용이 있을 경우 지적해 주시면 감사드리겠습니다.</p>

<h2 id="2-1-range-함수로-이터러블-객체-생성하기">2-1. range() 함수로 이터러블 객체 생성하기</h2>
<ul>
  <li>range(n): 0 이상 n 미만인 수를 차례로 나열하는 수열</li>
  <li>range(a, b): a 이상 b 미만인 수를 차례로 나열하는 수열</li>
  <li>range(a, b, step): a 이상 b 미만인 수를 step 간격으로 나열하는 수열</li>
</ul>

<h2 id="2-2-연속하는-정수의-합을-구하기-위해-값-정렬하기">2-2. 연속하는 정수의 합을 구하기 위해 값 정렬하기</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'a 부터 b 까지 정수의 합 구합니다.'</span><span class="p">)</span>
<span class="n">a</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'정수 a를 입력하세요.: '</span><span class="p">))</span>
<span class="n">b</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'정수 b를 입력하세요.: '</span><span class="p">))</span>

<span class="k">if</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="n">b</span><span class="p">:</span>
    <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="p">,</span> <span class="n">a</span> <span class="c1"># a와 b를 오름차순으로 정렬
</span>
<span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
    <span class="nb">sum</span> <span class="o">+=</span> <span class="n">i</span>

<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'</span><span class="si">{</span><span class="n">a</span><span class="si">}</span><span class="s">부터 </span><span class="si">{</span><span class="n">b</span><span class="si">}</span><span class="s">까지 정수의 합은 </span><span class="si">{</span><span class="nb">sum</span><span class="si">}</span><span class="s"> 입니다.'</span><span class="p">)</span>
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(결과) a 부터 b 까지 정수의 합 구합니다.
       정수 a를 입력하세요.: 7
       정수 b를 입력하세요.: 2
       2부터 7까지 정수의 합은 27 입니다.
</code></pre></div></div>

<p>참고로 <code class="language-plaintext highlighter-rouge">a, b = b, a</code> 부분은 우변의 <code class="language-plaintext highlighter-rouge">b, a</code>에 의해 두 값을 압축한 튜플 <code class="language-plaintext highlighter-rouge">(b, a)</code> 가 생성된다. 대입 시 튜플 <code class="language-plaintext highlighter-rouge">(b, a)</code>를 다시 풀어 <code class="language-plaintext highlighter-rouge">b, a</code>로 만든 다음 각각 a와 b에 대입한다.</p>

<h2 id="2-3-반복-과정에서-조건-판단하기-1">2-3. 반복 과정에서 조건 판단하기 1</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'a 부터 b 까지 정수의 합 구합니다.'</span><span class="p">)</span>
<span class="n">a</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'정수 a를 입력하세요.: '</span><span class="p">))</span>
<span class="n">b</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'정수 b를 입력하세요.: '</span><span class="p">))</span>

<span class="k">if</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="n">b</span><span class="p">:</span>
    <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="p">,</span> <span class="n">a</span>

<span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s"> + '</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s"> = '</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>
    <span class="nb">sum</span> <span class="o">+=</span> <span class="n">i</span>

<span class="k">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">)</span>
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(결과) a 부터 b 까지 정수의 합 구합니다.
       정수 a를 입력하세요.: 4
       정수 b를 입력하세요.: 4
       4 = 4
       a 부터 b 까지 정수의 합 구합니다.
       정수 a를 입력하세요.: 3
       정수 b를 입력하세요.: 7
       3 + 4 + 5 + 6 + 7 = 25
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'a부터 b까지 정수의 합을 구합니다.'</span><span class="p">)</span>
<span class="n">a</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'정수 a를 입력하세요.: '</span><span class="p">))</span>
<span class="n">b</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'정수 b를 입력하세요.: '</span><span class="p">))</span>

<span class="k">if</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="n">b</span><span class="p">:</span>
    <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="p">,</span> <span class="n">a</span>

<span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s"> + '</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>
    <span class="nb">sum</span> <span class="o">+=</span> <span class="n">i</span>

<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'</span><span class="si">{</span><span class="n">b</span><span class="si">}</span><span class="s"> = '</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>
<span class="nb">sum</span> <span class="o">+=</span> <span class="n">b</span>

<span class="k">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">)</span>
</code></pre></div></div>

<p>위 코드와 아래 코드의 결과는 같다. 그런데 a가 1이고 b가 10,000 일 때, for 문에서 10,000번 반복하는 동안 9,999번이 if 문을 거치고 마지막 1번이 else 문을 거친다. 즉, 마지막 1번 실행을 위해 조건문을 쓰게 되는 것이다. 이럴 거면 for 문 안에 있는 if 문을 제외하는 것이 좋다.</p>

<h2 id="2-4-반복-과정에서-조건-판단하기-2">2-4. 반복 과정에서 조건 판단하기 2</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'+와 -를 번갈아 출력'</span><span class="p">)</span>
<span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'몇 개를 출력할까요?: '</span><span class="p">))</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">2</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'-'</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'+'</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>

<span class="k">print</span><span class="p">()</span>
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(결과) +와 -를 번갈아 출력
       몇 개를 출력할까요?: 5
       +-+-+
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'+와 -를 번갈아 출력'</span><span class="p">)</span>
<span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'몇 개를 출력할까요?: '</span><span class="p">))</span>

<span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span> <span class="o">//</span> <span class="mi">2</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'+-'</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>

<span class="k">if</span> <span class="n">n</span> <span class="o">%</span> <span class="mi">2</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'+'</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>

<span class="k">print</span><span class="p">()</span>
</code></pre></div></div>

<p>마찬가지로 위, 아래 코드는 동일한 내용을 출력한다. 위 코드는 for 문을 반복할 때 마다 if 문을 수행한다. n이 50,000이면 if 문도 50,000번 수행한다. 아래 코드와 같이 수정하면 if 문을 마지막 한 번만 수행하면 된다.</p>

<h2 id="2-5-반복-과정에서-조건-판단하기-3">2-5. 반복 과정에서 조건 판단하기 3</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'*를 출력합니다.'</span><span class="p">)</span>
<span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'몇 개를 출력할까요?: '</span><span class="p">))</span>
<span class="n">w</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'몇 개마다 줄바꿈할까요?: '</span><span class="p">))</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'*'</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="n">w</span> <span class="o">==</span> <span class="n">w</span><span class="o">-</span><span class="mi">1</span><span class="p">:</span>
        <span class="k">print</span><span class="p">()</span>

<span class="k">if</span> <span class="n">n</span> <span class="o">%</span> <span class="n">w</span><span class="p">:</span>
    <span class="k">print</span><span class="p">()</span>
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(결과) *를 출력합니다.
          몇 개를 출력할까요?: 14
       몇 개마다 줄바꿈할까요?: 5
       *****
       *****
       ****
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'*를 출력합니다.'</span><span class="p">)</span>
<span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'몇 개를 출력할까요?: '</span><span class="p">))</span>
<span class="n">w</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'몇 개마다 줄바꿈할까요?: '</span><span class="p">))</span>

<span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span> <span class="o">//</span> <span class="n">w</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'*'</span> <span class="o">*</span> <span class="n">w</span><span class="p">)</span>

<span class="n">rest</span> <span class="o">=</span> <span class="n">n</span> <span class="o">%</span> <span class="n">w</span>
<span class="k">if</span> <span class="n">rest</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'*'</span> <span class="o">*</span> <span class="n">rest</span><span class="p">)</span>
</code></pre></div></div>

<p>이 코드도 위, 아래 모두 동일한 내용을 출력한다. 그러나 위 코드는 for 문을 반복할 때마다 if 문을 실행하므로 효율적이지 않다. 이를 개선한 코드가 아래 코드다.</p>

<h2 id="2-6-양수만-입력받기">2-6. 양수만 입력받기</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'1부터 n까지 정수의 합을 구합니다.'</span><span class="p">)</span>

<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'n값을 입력하세요.: '</span><span class="p">))</span>
    <span class="k">if</span> <span class="n">n</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
        <span class="k">break</span>

<span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">i</span> <span class="o">=</span> <span class="mi">1</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">n</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
    <span class="nb">sum</span> <span class="o">+=</span> <span class="n">i</span>
    <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>

<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'1부터 </span><span class="si">{</span><span class="n">n</span><span class="si">}</span><span class="s">까지 정수의 합은 </span><span class="si">{</span><span class="nb">sum</span><span class="si">}</span><span class="s">입니다.'</span><span class="p">)</span>
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(결과) 1부터 n까지 정수의 합을 구합니다.
       n값을 입력하세요.: -6
       n값을 입력하세요.: 0
       n값을 입력하세요.: 10
       1부터 10까지 정수의 합은 55입니다.
</code></pre></div></div>

<p>while 문 조건식에 True가 사용된 것은 무한 반복되도록 만든 것으로, <strong>무한 루프</strong> 라고 한다. 여기서는 반복문 안에서 break 문을 실행하면 반복문을 종료할 수 있다는 점을 이용하여 무한 루프를 탈출했다. do~while 문이나 repeat~util 문 등은 사후 판단 반복문인데, 파이썬은 이러한 사후 판단문이 제공되지 않아 break 문을 사용하여야 한다.</p>

<p class="align-center"><img src="/assets/images/algopy/2-1.png" alt="그림 2-1. while 반복문 순서도" /></p>
<p>그림 2-1. while 반복문 순서도</p>

<h2 id="2-7-직사각형-넓이로-변의-길이-구하기">2-7. 직사각형 넓이로 변의 길이 구하기</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">area</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'직사각형의 넓이를 입력하세요.: '</span><span class="p">))</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">area</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">*</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="n">area</span><span class="p">:</span> <span class="k">break</span>
    <span class="k">if</span> <span class="n">area</span> <span class="o">%</span> <span class="n">i</span><span class="p">:</span> <span class="k">continue</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s"> x </span><span class="si">{</span><span class="n">area</span> <span class="o">//</span> <span class="n">i</span><span class="si">}</span><span class="s">'</span><span class="p">)</span> <span class="c1"># 짧은 변, 긴 변 순서로 출력
</span></code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(결과) 직사각형의 넓이를 입력하세요.: 32
       1 x 32
       2 x 16
       4 x 8
</code></pre></div></div>

<p>i x i가 area를 초과하면 사각형의 최대 넓이를 초과하면서도 가장 긴 변의 길이가 되므로 프로그램을 종료한다. 또한, area가 i로 나누어 떨어지지 않으면 i는 변의 길이가 될 수 없으므로, 출력할 필요가 없게 된다.</p>

<h2 id="2-8-반복문-건너뛰기와-여러-범위-스캔하기">2-8. 반복문 건너뛰기와 여러 범위 스캔하기</h2>
<p>건너뛰어야 하는 값을 모르거나 건너뛰어야 하는 값이 매번 변화할 때 if, continue 문 사용해야 한다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">13</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">8</span><span class="p">:</span>
        <span class="k">continue</span>
    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">' '</span><span class="p">)</span>

<span class="k">print</span><span class="p">()</span>
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(결과) 1 2 3 4 5 6 7 9 10 11 12
</code></pre></div></div>

<p>그러나 건너뛰는 값을 안다면 if문 쓸 필요없이 더 효율적인 프로그램이 있다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span> <span class="o">+</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span> <span class="mi">13</span><span class="p">)):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">' '</span><span class="p">)</span>
<span class="k">print</span><span class="p">()</span>
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(결과) 1 2 3 4 5 6 7 9 10 11 12 
</code></pre></div></div>

<h2 id="2-9-비교-연산자를-연속으로-사용하는-방법과-드모르간-법칙">2-9. 비교 연산자를 연속으로 사용하는 방법과 드모르간 법칙</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'2자리 양수를 입력하세요.'</span><span class="p">)</span>

<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">no</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'값을 입력하세요.: '</span><span class="p">))</span>
    <span class="k">if</span> <span class="n">no</span> <span class="o">&gt;=</span> <span class="mi">10</span> <span class="ow">and</span> <span class="n">no</span> <span class="o">&lt;=</span> <span class="mi">99</span><span class="p">:</span>
        <span class="k">break</span>

<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'입력받은 양수는 </span><span class="si">{</span><span class="n">no</span><span class="si">}</span><span class="s"> 입니다.'</span><span class="p">)</span>
</code></pre></div></div>

<p>조건문 <code class="language-plaintext highlighter-rouge">if no&gt;= 10 and no &lt;= 99:</code> 부분을 다른 방법으로 구현할 수 있다.<br /></p>
<ol>
  <li>비교 연산자를 연속으로 사용<br />
<code class="language-plaintext highlighter-rouge">if 10 &lt;= no &lt;= 99:</code><br /></li>
  <li>드모르간의 법칙 사용<br />
<code class="language-plaintext highlighter-rouge">if not(no &lt; 10 or no &gt; 99):</code><br /></li>
</ol>

<p>드모르간의 법칙은 각 조건을 부정하고 논리곱을 논리합으로, 논리합을 논리곱으로 바꾸고 다시 전체를 부정하면 원래의 조건과 같다는 것이다! 이 법칙을 일반적으로 나타내면 다음과 같다.<br /></p>
<ul>
  <li>x and y와 not(not x or not y)의 논리값은 같다.<br /></li>
  <li>x or y와 not(not x and not y)의 논리값은 같다.<br /></li>
</ul>

<p>참고로 구조적 프로그래밍이란 입력과 출력으로 이루어진 구성 요소를 계층으로 배치하여 프로그램을 구성하는 방법을 말한다. 순차, 선택, 반복이라는 세 종류의 제어 흐름을 사용한다.</p>

<h2 id="2-10-다중-루프-알아보기">2-10. 다중 루프 알아보기</h2>
<ol>
  <li>구구단 곱셈표 출력
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'-'</span><span class="o">*</span><span class="mi">27</span><span class="p">)</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">):</span>
 <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">):</span>
     <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'</span><span class="si">{</span><span class="n">i</span> <span class="o">*</span> <span class="n">j</span><span class="p">:</span><span class="mi">3</span><span class="si">}</span><span class="s">'</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span> <span class="c1"># i*j를 3자리로 출력한다!
</span> <span class="k">print</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="s">'-'</span> <span class="o">*</span> <span class="mi">27</span><span class="p">)</span>
</code></pre></div>    </div>
    <p>(결과) —————————
        1  2  3  4  5  6  7  8  9
        2  4  6  8 10 12 14 16 18
        3  6  9 12 15 18 21 24 27
        4  8 12 16 20 24 28 32 36
        5 10 15 20 25 30 35 40 45
        6 12 18 24 30 36 42 48 54
        7 14 21 28 35 42 49 56 63
        8 16 24 32 40 48 56 64 72
        9 18 27 36 45 54 63 72 81
        —————————</p>
  </li>
  <li>직각 이등변 삼각형으로 출력하기
```python
print(‘왼쪽 아래가 직각인 이등변 삼각형을 출력합니다.’)
n = int(input(‘짧은 변의 길이를 입력하세요.: ‘))</li>
</ol>

<p>for i in range(n):
    for i in range(i+1):
        print(‘*’, end=’’)
    print()</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    (결과) 왼쪽 아래가 직각인 이등변 삼각형을 출력합니다.
           짧은 변의 길이를 입력하세요.: 5
           *
           **
           ***
           ****
           *****

```python
print('오른쪽 아래가 직각인 이등변 삼각형을 출력합니다.')
n = int(input('짧은 변의 길이를 입력하세요.: '))

for i in range(n):
    for _ in range(n-i-1):
        print(' ', end='')
    for _ in range(i+1):
        print('*', end='')
    print()
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(결과) 오른쪽 아래가 직각인 이등변 삼각형을 출력합니다.
       짧은 변의 길이를 입력하세요.: 5
           *
          **
         ***
        ****
       *****
</code></pre></div></div>

<h2 id="2-11-파이썬의-변수">2-11. 파이썬의 변수</h2>
<p>파이썬에서는 데이터, 함수, 클래스, 모듈, 패키지 등을 모두 객체로 취급한다. 객체는 자료형을 갖고, 메모리를 차지한다. 이런 특징으로 파이썬의 변수는 값을 갖지 않는다는 특징이 있다. 쉽게 말하자면, x=17 에서 x가 17 값을 갖고 있다 말할 수 없다는 것이다.</p>
<ul>
  <li>변수는 객체를 참조하는 객체에 연결된 이름에 불과하다.</li>
  <li>모든 객체는 메모리를 차지하고, 자료형뿐만 아니라 식별 번호를 갖는다.</li>
</ul>
:ET